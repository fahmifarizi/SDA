import tkinter as tk
from tkinter import messagebox
import csv
import os
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import matplotlib.pyplot as plt

def cek_file_csv():
    if not os.path.exists("skor.csv"):
        with open("skor.csv", mode="w", newline='') as f:
            writer = csv.writer(f)
            writer.writerow(["Nama", "Skor"])

def simpan_skor(nama, skor_baru):
    cek_file_csv()
    data = {}
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        for row in reader:
            data[row["Nama"]] = int(row["Skor"])
    if nama in data:
        if skor_baru > data[nama]:
            data[nama] = skor_baru
    else:
        data[nama] = skor_baru
    with open("skor.csv", mode="w", newline='') as f:
        writer = csv.writer(f)
        writer.writerow(["Nama", "Skor"])
        for n, s in data.items():
            writer.writerow([n, s])

def reset_skor():
    with open("skor.csv", mode="w", newline='') as f:
        writer = csv.writer(f)
        writer.writerow(["Nama", "Skor"])
    messagebox.showinfo("Reset", "Semua skor telah direset.")

def tampilkan_skor_tertinggi():
    cek_file_csv()
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        data = sorted(reader, key=lambda x: int(x["Skor"]), reverse=True)
    hasil = "Skor Tertinggi:\n"
    for i, row in enumerate(data[:5], 1):
        hasil += f"{i}. {row['Nama']} - {row['Skor']}\n"
    messagebox.showinfo("Top 5 Skor", hasil)

def tampilkan_chart():
    cek_file_csv()
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        data = sorted(reader, key=lambda x: int(x["Skor"]), reverse=True)

    top_nama = [row["Nama"] for row in data[:5]]
    top_skor = [int(row["Skor"]) for row in data[:5]]

    if not top_nama:
        messagebox.showinfo("Info", "Belum ada data skor.")
        return

    fig, ax = plt.subplots(figsize=(6, 4))
    ax.barh(top_nama[::-1], top_skor[::-1], color='#ffa726')
    ax.set_title("Top 5 Skor Tertinggi", fontsize=14)
    ax.set_xlabel("Skor")
    ax.set_ylabel("Nama")
    fig.tight_layout()

    chart_window = tk.Toplevel(root)
    chart_window.title("Chart Skor")
    chart_window.configure(bg="#212121")
    canvas = FigureCanvasTkAgg(fig, master=chart_window)
    canvas.draw()
    canvas.get_tk_widget().pack(padx=10, pady=10)

def on_enter(e):
    e.widget['background'] = '#ffcc00'
    e.widget['foreground'] = '#333333'

def on_leave(e):
    e.widget['background'] = '#ffa726'
    e.widget['foreground'] = '#212121'
root = tk.Tk()
root.title("Proyek SDA - Aplikasi Skor")
root.geometry("500x470")
root.configure(bg="#212121")

frame_welcome = tk.Frame(root, bg="#212121")

frame_judul = tk.Frame(frame_welcome, bg="#212121")
frame_judul.pack(fill='x', pady=(30,40))

label_judul = tk.Label(frame_judul, text="Selamat Datang di Aplikasi SDA",
                       font=("Consolas", 24, "bold"), fg="#ffa726", bg="#212121")
label_judul.pack(expand=True)

frame_tombol = tk.Frame(frame_welcome, bg="#212121")
frame_tombol.pack()

create_hover_button(frame_tombol, "Perkenalan", lambda: switch_frame(frame_perkenalan)).pack(pady=12)
create_hover_button(frame_tombol, "Masuk ke Proyek SDA", lambda: switch_frame(frame_project)).pack(pady=12)
create_hover_button(frame_tombol, "Keluar", root.quit).pack(pady=12)

frame_perkenalan = tk.Frame(root, bg="#3a2f0b")

frame_judul2 = tk.Frame(frame_perkenalan, bg="#3a2f0b")
frame_judul2.pack(fill='x', pady=(30,30))

label_judul2 = tk.Label(frame_judul2, text="Perkenalan Kelompok",
                        font=("Consolas", 20, "bold"), fg="#ffcc00", bg="#3a2f0b")
label_judul2.pack(expand=True)

frame_isi = tk.Frame(frame_perkenalan, bg="#3a2f0b")
frame_isi.pack(pady=(0,20))

anggota = [
    {"nama": "Ruddy Haristianata", "npm": "2457051011"},
    {"nama": "Muhammad Rafi Al- Musthafa", "npm": "2457051009"},
    {"nama": "Wildan Humam Alpasya", "npm": "2417051064"},
    {"nama": "Fahmi Farizi", "npm": "2457051011"},
]

for i, m in enumerate(anggota, 1):
    tk.Label(frame_isi, text=f"{i}. Nama: {m['nama']}", fg="#ffcc00", bg="#3a2f0b",
             font=("Consolas", 12, "bold")).pack(anchor="w", padx=30)
    tk.Label(frame_isi, text=f"   NPM: {m['npm']}", fg="#ffcc00", bg="#3a2f0b",
             font=("Consolas", 12)).pack(anchor="w", padx=50)

tk.Label(frame_perkenalan, text="Kelas: Ilmu Komputer Semester 2", fg="#ffcc00", bg="#3a2f0b",
         font=("Consolas", 14, "bold")).pack(pady=10)

tk.Label(frame_perkenalan, text="Deskripsi: Proyek ini adalah aplikasi untuk mencatat dan\nmengelola skor siswa berdasarkan teori SDA.",
         fg="#ffcc00", bg="#3a2f0b", font=("Consolas", 12), justify="center").pack(pady=10)

frame_tombol2 = tk.Frame(frame_perkenalan, bg="#3a2f0b")
frame_tombol2.pack(pady=20)
create_hover_button(frame_tombol2, "Kembali ke Menu Awal", lambda: switch_frame(frame_welcome)).pack()

frame_project = tk.Frame(root, bg="#2f2f2f")

frame_judul3 = tk.Frame(frame_project, bg="#2f2f2f")
frame_judul3.pack(fill='x', pady=(30,20))

label_judul3 = tk.Label(frame_judul3, text="Proyek Teori SDA",
                        font=("Consolas", 22, "bold"), fg="#ff9900", bg="#2f2f2f")
label_judul3.pack(expand=True)

frame_input = tk.Frame(frame_project, bg="#2f2f2f")
frame_input.pack(pady=10)

tk.Label(frame_input, text="Masukkan Nama:", fg="#ff9900", bg="#2f2f2f",
         font=("Consolas", 12, "bold")).grid(row=0, column=0, sticky="w", pady=5)
entry_nama = tk.Entry(frame_input, font=("Consolas", 12), width=30)
entry_nama.grid(row=0, column=1, pady=5, padx=5)

tk.Label(frame_input, text="Masukkan Skor:", fg="#ff9900", bg="#2f2f2f",
         font=("Consolas", 12, "bold")).grid(row=1, column=0, sticky="w", pady=5)
entry_skor = tk.Entry(frame_input, font=("Consolas", 12), width=30)
entry_skor.grid(row=1, column=1, pady=5, padx=5)

def tambah_skor():
    nama = entry_nama.get().strip()
    skor_input = entry_skor.get().strip()
    if not nama or not skor_input:
        messagebox.showwarning("Input Kosong", "Nama dan skor harus diisi.")
        return
    try:
        skor = int(skor_input)
        simpan_skor(nama, skor)
        messagebox.showinfo("Sukses", f"Skor berhasil disimpan/diupdate!")
    except ValueError:
        messagebox.showerror("Error", "Skor harus berupa angka.")

frame_tombol3 = tk.Frame(frame_project, bg="#2f2f2f")
frame_tombol3.pack(pady=20)

create_hover_button(frame_tombol3, "Simpan/Update Skor", tambah_skor).pack(pady=8)
create_hover_button(frame_tombol3, "Reset Semua Skor", reset_skor).pack(pady=8)
create_hover_button(frame_tombol3, "Lihat Skor Tertinggi", tampilkan_skor_tertinggi).pack(pady=8)
create_hover_button(frame_tombol3, "Tampilkan Chart Skor", tampilkan_chart).pack(pady=8)
create_hover_button(frame_tombol3, "Kembali ke Menu Awal", lambda: switch_frame(frame_welcome)).pack(pady=8)

cek_file_csv()
switch_frame(frame_welcome)
root.mainloop()
